<div id="footer">
    <div id="fbox1">
        <h2>Related</h2>
        <ul>
            <li><a href="https://github.com/Calvinverse"><i class="fa fa-github"></i> GitHub</a></li>
        </ul>
    </div>
    <div id="fbox2">
        <h2 class="copyright">Copyright</h2>
        <p>Copyright (c) @DateTime.Now.Year <a href="/">Petrik van der Velde</a>. All rights reserved.</p>

        <h2 class="disclaimer">Disclaimer</h2>
        <p>The opinions expressed herein are my own personal opinions and do not represent my employer's view in any way.</p>
    </div>
    <div id="fbox3">
        <h2 class="media">Media</h2>
        <p><a href="/feed.rss"><img src="/assets/img/feed.png" alt="RSS feed"></a></p>
    </div>
</div>
<div id="copyright-div">
    <p>
        Icon based on the <a href="https://thenounproject.com/search/?creator=718857&q=categories&i=249390">Categories</a> icon by
        <a href="https://thenounproject.com/marie49/">Marie Van den Broek</a>,
        licenced using the <a href="https://creativecommons.org/licenses/by/3.0/us/legalcode">Creative Commons</a> license.
    </p>
    <p>
        Generated by <a href="https://wyam.io" class="link link--light">Wyam</a> on @DateTime.Now.ToString("R")

        @{
            var userProvidedInputPath = Context.FileSystem.RootPath.Combine(Context.FileSystem.InputPaths.Last().Combine("..\\build\\temp"));

            var commit = string.Empty;
            var vcsInfo = System.IO.Path.Combine(System.IO.Path.GetFullPath(new System.Uri(userProvidedInputPath.ToString()).LocalPath), "vcs.info.json");
            if (System.IO.File.Exists(vcsInfo))
            {
                var prefix = "\"revision\": \"";
                var lines = System.IO.File.ReadAllLines(vcsInfo);
                foreach(var line in lines)
                {
                    if (line.Contains(prefix))
                    {
                        commit = line.TrimEnd(',').TrimEnd('\"').Substring(line.IndexOf(prefix) + prefix.Length);
                    }
                }
            }

            var version = string.Empty;
            var versionInfo = System.IO.Path.Combine(System.IO.Path.GetFullPath(new System.Uri(userProvidedInputPath.ToString()).LocalPath), "semantic_version.json");
            if (System.IO.File.Exists(versionInfo))
            {
                var prefix = "\"SemVer\": \"";
                var lines = System.IO.File.ReadAllLines(versionInfo);
                foreach(var line in lines)
                {
                    if (line.Contains(prefix))
                    {
                        version = line.TrimEnd(',').TrimEnd('\"').Substring(line.IndexOf(prefix) + prefix.Length);
                    }
                }
            }

            if (!string.IsNullOrWhiteSpace(commit))
            {
                <text> from commit <a href="https://github.com/calvinverse/calvinverse.docs/tree/@commit" class="link link--light">@commit</a> </text>
            }

            if (!string.IsNullOrWhiteSpace(version))
            {
                <text>at version @version.</text>
            }
        }
    </p>
</div>